name: Build and Deploy

on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  
jobs:
  build:
    runs-on: ubuntu-latest

    env:    
      API_BASE_PATH: https://enduranceraceplanner.com/api/
      OAUTH_CLIENT_ID: 709154627100-di88dffek3d6mrvgnr83kg4jlh28hopm.apps.googleusercontent.com

    steps:
    - uses: actions/checkout@v3
    - name: Setup environment variables
      run: echo "API_BASE_PATH=$API_BASE_PATH\nOAUTH_CLIENT_ID=$OAUTH_CLIENT_ID" >> .env
    - name: Build rust
      run: cargo build --release
    - name: Run tests
      run: cargo test --verbose
    - name: Restore npm
      working-directory: ./web
      run: npm ci
    - name: Build npm
      working-directory: ./web
      run: npm run build-ci
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: web
        path: web/dist/**/*.*
        if-no-files-found: error
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: api
        path: "**/target/release/api"
        if-no-files-found: error    

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    environment: Production
    
    steps:
    - uses: actions/checkout@v3
    - name: Download API Artifact
      uses: actions/download-artifact@v3.0.2
      with:
        path: ./artifacts/api
        name: api
    - name: Download Web Artifact
      uses: actions/download-artifact@v3.0.2
      with:
        path: ./artifacts/web
        name: web
    - name: List the artifacts files
      run: ls -R ./artifacts
#     - name: Install sqlx-cli
#       run: cargo install sqlx-cli --no-default-features --features rustls,postgres
#     - name: Migrate database
#       env:
#         DATABASE_URL: ${{ secrets.DATABASE_URL }}
#       run: cd api/ && DATABASE_URL=$DATABASE_URL cargo sqlx migrate run
    - name: Zip artifacts
      run: zip -r artifacts.zip artifacts/
    - name: Copy artifacts to server
      env:
        SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
      run: scp -i "$SSH_DEPLOY_KEY" artifacts.zip ubuntu@ec2-52-87-108-46.compute-1.amazonaws.com:~
    
