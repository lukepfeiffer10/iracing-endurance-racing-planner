name: Build and Deploy

on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  
jobs:
  build:
    runs-on: ubuntu-latest

    env:    
      API_BASE_PATH: https://enduranceraceplanner.com/api/
      OAUTH_CLIENT_ID: 709154627100-di88dffek3d6mrvgnr83kg4jlh28hopm.apps.googleusercontent.com

    steps:
    - uses: actions/checkout@v3
    - name: Setup environment variables
      run: echo "API_BASE_PATH=$API_BASE_PATH\nOAUTH_CLIENT_ID=$OAUTH_CLIENT_ID" >> .env
    - name: Build rust
      run: cargo build --release
    - name: Run tests
      run: cargo test --verbose
    - name: Restore npm
      working-directory: ./web
      run: npm ci
    - name: Build npm
      working-directory: ./web
      run: npm run build-ci
    - name: Upload web app Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: web
        path: web/dist/**/*.*
        if-no-files-found: error
    - name: Upload api Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: api
        path: "**/target/release/api"
        if-no-files-found: error
    - name: Upload deployment scripts Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: deploy-scripts
        path: |
          deploy-scripts/*.sh
          appspec.yml
        if-no-files-found: error

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    environment: Production
    
    steps:
    - name: Download API Artifact
      uses: actions/download-artifact@v3.0.2
      with:
        path: ./artifacts/api
        name: api
    - name: Download Web Artifact
      uses: actions/download-artifact@v3.0.2
      with:
        path: ./artifacts/web
        name: web
    - name: Download deploy scripts Artifact
      uses: actions/download-artifact@v3.0.2
      with:
        path: ./artifacts/
        name: deploy-scripts
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ vars.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
        aws-region: us-east-1
    - name: Copy artifacts to s3
      run: tar czf artifacts.tar.gz artifacts && aws s3 cp artifacts.tar.gz s3://enduranceraceplanner-artifacts/
    - name: Deploy code to ec2
      run: aws create-deployment --application-name enduranceraceplanner --deployment-group-name enduranceraceplanner-prod-dg --revision s3 --s3-location bucket=s3://enduranceraceplanner-artifacts/,key=artifacts,bundleType=tgz
    
